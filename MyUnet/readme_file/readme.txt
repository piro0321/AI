Description of all programs.

----------------------------
このテキストファイルは，
全てのプログラムファイルの役割などを説明するRead meテキストです.
細かい説明はプログラム内にあるので，さらっと解説だけしていきます．
----------------------------
実行環境について

・python言語使用
-使用したモジュール

python		:3.6.5
opencv		:3.4.1
numpy		:1.15.4
openpyxl	:2.5.8
pillow:		:5.1.0
tensorflow	:1.9.0
tensorflow-gpu	:1.9.0

・実行環境
GPU		：NVIDIA GeForce GTX 1050 Ti
GPUサーバ	：学部のサーバ


「補足」

モジュールは基本最新でも大丈夫だと思う
足りないものとかも追加すれば大丈夫．．．
仮想環境を作成するときはpipかcondaのどちらかに統一してインストールする事

----------------------------
・メインプログラムについて
3つのプログラムがメインです.
①system.py
②self_unet.py
③dataset.py

解説します.

-----------
①train.py
ネットワークモデルの学習に使います．
ネットワークモデル：U-Net
実行前に確認する事
１．「./image」にimage.pkl・label.pklがある事
２．データセットの画像サイズを確認->関数内の変数を変更

また，学習にはGPUを使用します．
GPUサーバを使いましょう．
色々あるので先輩や教授に聞くといいです．
学部GPUサーバを使用する場合は，大学に使用許可？をもらう必要があるので教授に聞きましょう．

1回の学習には約1時間ほどかかります．
待ち時間にラベル作成をするといいですね．継続は大切です．

パラメータについてはプログラム内に説明を残しているので参考にしてください．


②dataset.py
実行するだけで 「./image」にデータセットを作ってくれます
データセットは以下の二つ
・image.pkl
・label.pkl
image.pklとlabel.pklは対応してるのでそのまま使えば大丈夫です.

作成したラベルデータは，
「\\aka\share\amed\amed_liver_label」に保存する．
ディレクトリの構造は [image,label]で大丈夫です（pklはdataset.py実行時に作成されます）
データセットを増やした場合は，プログラム内の変数（下の方にある）
task　の部分を増やそう


例）
task = ["image06","追加するフォルダ名"]

プログラムを見れば，何しているかわかると思う．．．．から細かい説明は省きます

③system.py
学習したモデルの性能を評価するプログラム

[test関数]
Amedで決められたテスト画像から肝臓領域の抽出を行う.
抽出結果は //aka/share/amed/amed_unet_result　に書き出し.

[unet_result関数]
抽出結果から包含率を求める.
包含率は，「肝臓領域推測結果」と「腫瘍領域の矩形」の論理積から求めている.

④self_unet.py
学習に使うためのネットワークモデルが記載されたプログラム

自分で好きなようにカスタマイズできるように各層のまとまりを関数で分けてあります.
好きなように改造してください．

----------------------------------------------------






